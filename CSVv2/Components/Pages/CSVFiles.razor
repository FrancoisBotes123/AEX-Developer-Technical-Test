@page "/csvfiles"
@using CSVv2.Interfaces
@using CSVv2.Models.CSV
@using CSVv2.Components.CustomComponents

@inject ICSVFileService CSVFileService

<h1>CSV Files</h1>

@if (csvFiles == null)
{
    <p>Loading...</p>
}
else
{
    foreach (var csvFile in csvFiles)
    {
        <CSVFileCard 
            Id="@csvFile.Id" 
            FileName="@csvFile.FileName" 
            UploadedTime="@csvFile.UploadedTime"
            OnEdit="(() => EditFile(csvFile.Id))"
            OnDelete="(() => DeleteFile(csvFile.Id))" />
    }

}

@code {
    private List<CsvFileDto> csvFiles;

    protected override async Task OnInitializedAsync()
    {
        csvFiles = await CSVFileService.GetCSVFilesAsync();
    }

    private void EditFile(int id)
    {
        
    }


    private async Task DeleteFile(int id)
    {
       /* var parameters = new ModalParameters();
         parameters.Add("Message", $"Are you sure you want to delete the file?");

         var modal = Modal.Show<ConfirmDialog>("Confirm Delete", parameters);
         var result = await modal.Result;

         if (!result.Cancelled)
         {
             await CSVFileService.DeleteCSVFileAsync(id);
             csvFiles.RemoveAll(f => f.Id == id);
         }
         */
    }
}
