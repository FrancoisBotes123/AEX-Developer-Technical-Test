@using System.Data
@using System.Text
@using CSV.Models.CSV

<style>
    .modal {
        display: block; /* Hidden by default; you need to add logic to control the display */
        position: fixed;
        z-index: 1050;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        background-color: rgba(0,0,0,0.5);
    }

    .modal-dialog {
        position: relative;
        width: auto;
        max-width: 600px;
        margin: 10% auto;
    }

    .modal-content {
        position: relative;
        background-color: #fff;
        outline: 0;
    }
</style>
<div class="modal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">@CsvFile.FileName</h5>
            </div>
            <div class="modal-body">
                @if (DataTable != null)
                {
                    <table class="table table-striped">
                        <thead>
                            <tr>
                                @foreach (DataColumn col in DataTable.Columns)
                                {
                                    <th>@col.ColumnName</th>
                                }
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (DataRow row in DataTable.Rows)
                            {
                                <tr>
                                    @foreach (DataColumn col in DataTable.Columns)
                                    {
                                        <td>@row[col]</td>
                                    }
                                </tr>
                            }
                        </tbody>
                    </table>
                }
                else
                {
                    <p>Loading data...</p>
                }
            </div>
            <div class="modal-footer">
                <button class="btn btn-secondary" @onclick="CloseModal">Close</button>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter] public CsvFile CsvFile { get; set; }
    [Parameter] public EventCallback<bool> OnClose { get; set; }


    public DataTable DataTable { get; set; }

    protected override void OnParametersSet()
    {
        if (CsvFile?.Content != null)
        {
            DataTable = ParseCsv(Encoding.UTF8.GetString(CsvFile.Content));
        }
    }

    private DataTable ParseCsv(string csvContent)
    {
        DataTable dt = new DataTable();
        using (StringReader sr = new StringReader(csvContent))
        {
            string[] headers = sr.ReadLine().Split(',');
            foreach (string header in headers)
            {
                dt.Columns.Add(header);
            }

            string line;
            while ((line = sr.ReadLine()) != null)
            {
                var fields = line.Split(',');
                DataRow dr = dt.NewRow();
                for (int i = 0; i < fields.Length; i++)
                {
                    dr[i] = fields[i];
                }
                dt.Rows.Add(dr);
            }
        }
        return dt;
    }

    private async Task CloseModal()
    {
        await OnClose.InvokeAsync(false);
    }
}
